syntax = "proto3";

package auth;

import "github.com/metaverse/truss/deftree/googlethirdparty/annotations.proto";

service Auth {
  rpc JWKS (JWKSRequest) returns (JWKSResponse) {
    option (google.api.http) = {
      get: "/auth/jwks"
    };
  }

  rpc Login (LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      custom {
        kind: "HEAD"
        path: "/auth/login"
      }
      additional_bindings {
        post: "/auth/login"
        // All other fields (In) are located in the body of the http/json request
        body: "*"
      }
    };
  }

  rpc CreateAuth (CreateAuthRequest) returns (CreateAuthResponse) {
    option (google.api.http) = {
      custom {
        kind: "HEAD"
        path: "/auth/register"
      }
      additional_bindings {
        post: "/auth/register"
        // All other fields (In) are located in the body of the http/json request
        body: "*"
      }
    };
  }

  rpc Refresh (RefreshRequest) returns (RefreshResponse) {
    option (google.api.http) = {
      custom {
        kind: "HEAD"
        path: "/auth/refresh"
      }
      additional_bindings {
        post: "/auth/refresh"
        // All other fields (In) are located in the body of the http/json request
        body: "*"
      }
    };
  }
}

message JWKSRequest {}
message JWKSResponse {
  message Keys {
    string kty = 1;
    string n = 2;
    string e = 3;
  }
  repeated Keys keys = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}
message LoginResponse {
  int32 code = 1;
  string message = 2;
  map<string, int32> errors = 3;
  string access_token = 4;
  string refresh_token = 5;
}

message CreateAuthRequest {
  uint64 user_id = 1;
  string password = 2;
  string email = 3;
  string first_name = 4;
  string last_name = 5;
}

message CreateAuthResponse {
  int32 code = 1;
  string message = 2;
  map<string, int32> errors = 3;
  string access_token = 4;
  string refresh_token = 5;
}

message RefreshRequest {
  string refresh_token = 1;
}
message RefreshResponse {
  int32 code = 1;
  string message = 2;
  map<string, int32> errors = 3;
  string access_token = 4;
  string refresh_token = 5;
}